name: Build & Test

on: push

jobs:
  ci:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: ["6.0", "7.0"]
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v3
        if: matrix.dotnet == '6.0'
        with:
          dotnet-version: 6.0.x
      - name: Setup .NET 7 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --framework net${{ matrix.dotnet }}
      - name: Test
        run: dotnet test --collect "XPlat Code Coverage" --settings coverlet.runsettings --logger trx --framework net${{ matrix.dotnet }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: net${{ matrix.dotnet }}
        if: always()
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test_results_${{ matrix.dotnet }}.zip
          path: TestResults/*.trx

  publish-test-results:
    name: "Publish Tests Results"
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Extract Artifacts
        run: |
          for file in artifacts/*.zip; do
            if [[ -f "$file" ]]; then
              dir="${file/%.zip/}"
              mkdir -p "$dir"
              unzip -d "$dir" "$file"
            fi
          done
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          trx_files: "artifacts/*/**/*.trx"
